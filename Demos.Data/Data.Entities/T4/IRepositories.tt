<#@ template debug = "true" hostspecific ="true" language= "C#"   #>
<#@ assembly name="System.Core" #>
<#@ import namespace = "System"#>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension = ".cs" #>
 
<#@ include file="$(SolutionDir)Demos.Data\Data.Entities\T4\EntityOutputHelper.ttinclude"#> 
<#@ include file="$(SolutionDir)Demos.Data\Data.Entities\T4\EntityHelper.ttinclude" #>
<#		
	    

        var manager = Manager.Create(Host, GenerationEnvironment);
		string solutionDir = Host.ResolveAssemblyReference( "$(SolutionDir)" );
		string savePath = solutionDir+"/Demos.Data/Data.Repository/IRepository";
        List<DbTable> tableList= new TemplateHelper().GetDbTables();
		
		foreach(var entity in tableList)
		{	 
			List<DbColumn> columns =  new TemplateHelper().GetDbColumns(entity.TableName,entity.SchemaName);
			var keyModel = columns.FirstOrDefault(x=>x.IsPrimaryKey==true);
			var entityName = entity.EntityName;
			manager.StartNewFile(savePath+"/I"+entityName + "Repository.cs");#>

//------------------------------------------------------------------------------
// 警告:
//     该代码由T4工具根据模板自动生成,直接在该代码上进行任何修改都将在重新生成后丢失!
//     如有需要应使用partial class或是继承该类进行自定义扩展。
//------------------------------------------------------------------------------
using System;
using Data.Entities.Models;
using SqlSugar;
using Webdiyer.WebControls.Mvc;
using System.Collections.Generic;
using Demos.Entities.ResultModel;
using Demos.Entities.FilterModel;	

namespace Data.Repository.Repository
{   
	public partial interface I<#=entityName#>Repository 
	{		

		/// <summary>
        /// 获取实体
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
		<#=entityName#> GetModel(<#=keyModel.ColumnType#> <#=keyModel.ColumnName#>);
		/// <summary>
        /// 新增
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
		<#=entityName#> Insert(<#=entityName#> model);
		/// <summary>
        /// 修改
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
		 <#=entityName#> Update(<#=entityName#> entity);
		 /// <summary>
        /// 删除
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        bool Delete(<#=entityName#> model);
		/// <summary>
        /// 分页查询
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        PagedResult<<#=entityName#>> PagerMenuInfoList(PagingInfo paging, string where);
		/// <summary>
        /// 批量新增
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        bool BatchInsert(List<<#=entityName#>> list);
		/// <summary>
        /// 批量修改
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        bool BatchUpdate(List<<#=entityName#>> list);

	}
}
	
<#
		manager.EndBlock();    
         }            
       manager.Process(true);  
#>

